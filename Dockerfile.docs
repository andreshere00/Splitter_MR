# syntax=docker/dockerfile:1.7
FROM python:3.12-slim AS base

RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt/lists \
    apt-get update && apt-get install -y --no-install-recommends \
      gcc build-essential git \
    && rm -rf /var/lib/apt/lists/*

RUN pip install --upgrade pip && pip install uv==0.6.4

WORKDIR /app
ENV SETUPTOOLS_SCM_PRETEND_VERSION=0.0.0+docs
ENV UV_LINK_MODE=copy

# ---------- deps stage (for "prepare") ----------
FROM base AS deps
WORKDIR /app
COPY pyproject.toml uv.lock mkdocs.yml ./

RUN --mount=type=cache,target=/root/.cache/uv bash -euxo pipefail <<'EOF'
uv export --format requirements-txt --group dev --no-default-groups > /tmp/dev.txt
uv export --format requirements-txt                                 > /tmp/runtime.txt
uv pip install --system -r /tmp/dev.txt --no-cache-dir
uv pip install --system -r /tmp/runtime.txt --no-cache-dir
rm -f /tmp/dev.txt /tmp/runtime.txt
EOF

# ---------- final docs image ----------
FROM deps AS app
WORKDIR /app
COPY . .

# Install project with extras so mkdocstrings/imports donâ€™t fail
ARG EXTRAS=""
RUN --mount=type=cache,target=/root/.cache/uv uv pip install --system -e .${EXTRAS}

# git identity for gh-deploy
RUN git config --global user.name "github-actions[bot]" && \
    git config --global user.email "github-actions[bot]@users.noreply.github.com"

CMD ["uv", "run", "mkdocs", "gh-deploy", "--force"]
